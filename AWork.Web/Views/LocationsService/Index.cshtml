@model X.PagedList.IPagedList<AWork.Contracts.Dto.Production.LocationDto>
@using X.PagedList.Mvc.Core
<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "LocationsService", FormMethod.Get)) ;
<table class="table">
    <thead>
        <tr>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CostRate)
            </th>
            <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Availability)
            </th>
            @*<th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSort">Sort</a>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().ModifiedDate)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CostRate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Availability)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>*@
            <td>
                <a asp-action="Edit" asp-route-id="@item.LocationId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.LocationId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.LocationId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new{page, CurrentFilter = ViewBag.CurrentFilter}))

<script>
    function getFetchSize(value) {
        document.location.href = "/ProductsPagedServer?&FetchSize=" + value;
    }
</script>