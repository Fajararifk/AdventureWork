@model X.PagedList.IPagedList<AWork.Contracts.Dto.Purchasing.VendorDto>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Index";
    ViewBag.title = "cool";
}

<link href="~/css/pageList.css" rel="stylesheet" type="text/css" />

<div class="container-xxl flex-grow-1 container-p-y">
    <!-- Bordered Table -->
    <div class="card">
        <div class="card-header">
            <h2 class="text-center mb-3 text-primary">LIST VENDOR</h2>
            <a class="btn btn-primary text-end" asp-action="Create"><span class="tf-icons bx bx-book-add"></span>&nbsp; Create New</a>
            <div class="row">
                <div class="col-sm-10">
                    <br />
                    <div class="row">
                        @using (Html.BeginForm("Index", "Vendors", FormMethod.Get))
                        {
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="row">
                                        <div class="col-lg-6 col-md-6 col-sm-12">
                                            @Html.TextBox("SearchString", ViewBag.currentFilter as string, new{@class="form-control search-slt", @placeholder ="Search By AccountNumber, Name"})
                                        </div>
                                        <div class="col-lg-3 col-md-3 col-sm-12">
                                            <button type="submit" class="btn btn-primary">Search</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-sm-2">
                    Show Data : @Html.DropDownList("FetchSize",
                    ViewBag.PagedList as SelectList,"5",
                    new {
                    @class = "form-control search-slt",
                    @onChange = "getFetchSize(this.value)"
                    })
                </div>
            </div>

        </div>
        <div class="card-body">
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().AccountNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().CreditRating)
                            </th>
                            <th>
                                Preferred Vendor Status
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().ActiveFlag)
                            </th>
                            <th>Total Order</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccountNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreditRating)
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.PreferredVendorStatus)*@
                                    @if (item.PreferredVendorStatus == true)
                                    {
                                        <span class="badge bg-label-info me-1">Recommended</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-warning me-1">Good</span>
                                    }
                                </td>
                                <td>
                                    @*@Html.DisplayFor(modelItem => item.ActiveFlag)*@
                                    @if (item.ActiveFlag == true)
                                    {
                                        <span class="badge bg-label-primary me-1">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-danger me-1">Non Active</span>
                                    }
                                </td>
                                <td>
                                </td>
                                <td>
                                    <button class="btn p-0" type="button" id="cardOpt4" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="bx bx-dots-vertical-rounded"></i>
                                    </button>
                                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="cardOpt4" style="">
                                        <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.BusinessEntityId"><i class="bx bx-edit-alt me-1"></i>Edit</a>
                                        <a class="dropdown-item" asp-action="Details" asp-route-id="@item.BusinessEntityId"><i class="bx bx-detail me-1"></i>Details</a>
                                        <a class="dropdown-item" asp-action="Delete" asp-route-id="@item.BusinessEntityId"><i class="bx bx-trash me-1"></i>Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="text-center">
            @Html.PagedListPager(Model,
            page => Url.Action("Index",new {page,CurrentFilter=ViewBag.currentFilter,FetchSize = ViewBag.pageSize})
            )
        </div>
    </div>
    <!--/ Bordered Table -->
</div>


<script>
    function getFetchSize(value) {
        document.location.href = "/Vendors?FetchSize=" + value + "&CurrentFilter=@ViewBag.currentFilter";
    }
</script>
