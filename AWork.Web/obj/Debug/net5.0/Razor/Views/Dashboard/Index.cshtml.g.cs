#pragma checksum "D:\FinalFix\AWork.Web\Views\Dashboard\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "206d98c9de5616605b84cdcf5dc7e6b2943216ee"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Dashboard_Index), @"mvc.1.0.view", @"/Views/Dashboard/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\FinalFix\AWork.Web\Views\_ViewImports.cshtml"
using AWork.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\FinalFix\AWork.Web\Views\_ViewImports.cshtml"
using AWork.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"206d98c9de5616605b84cdcf5dc7e6b2943216ee", @"/Views/Dashboard/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7a1683cd99f6100561ab4f2b698f40be1084e5b8", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Dashboard_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div>
    <style type=""text/css"">
        body {
            font-family: roboto;
        }

        td {
            width: 50%;
        }

        row {
            max-width: 300px;
            border: solid 1px black;
            background-color: blue;
            color: white;
        }
    </style>
    <h2 align=""center"">Person Dashboard</h2>
    <div>
        <table style=""width:100%"">
            <tr>
                <td rowspan=""7"">
                    <div id=""chart""></div>
                </td>
                <td>
                    <div><b>PERSONTYPE</b></div>
                </td>
                <td>
                    <div><b>TOTAL PERSON</b></div>
                </td>
            </tr>
            <tr>
                <td>EMPLOYEE (EM)</td>
                <td>282</td>
            </tr>
            <tr>
                <td>SALES PERSON (SP)</td>
                <td>17</td>
            </tr>
            <tr>
                <td>INDIVIDUAL CUSTOMER (I");
            WriteLiteral(@"N)</td>
                <td>18485</td>
            </tr>
            <tr>
                <td>STORE CONTACT (SC)</td>
                <td>760</td>
            </tr>
            <tr>
                <td>GENERAL CONTACT (GC)</td>
                <td>289</td>
            </tr>
            <tr>
                <td>VENDOR CONTACT (VC)</td>
                <td>159 </td>
            </tr>
            <tr>
                <td rowspan=""7""><div id=""chart2""></div></td>
                <td><b>COUNTRY</b></td>
                <td><b>TOTAL PERSON</b></td>
            </tr>
            <tr>
                <td>AMERICA SAMOA (AS)</td>
                <td>1879</td>
            </tr>
            <tr>
                <td>AUSTRALIA (AU)</td>
                <td>9805</td>
            </tr>
            <tr>
                <td>CANADA (CA)</td>
                <td>11882</td>
            </tr>
            <tr>
                <td>GENMARY (DE)</td>
                <td>6573</td>
            </tr>
  ");
            WriteLiteral(@"          <tr>
                <td>MICRONESIA (FM)</td>
                <td>1961</td>
            </tr>
            <tr>
                <td>FRANCE (FR)</td>
                <td> 89952</td>
            </tr>
        </table>

    </div>
</div>


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>

$(document).ready(function () {
 //renderChart();
    let totalProduct =[];
    let categories =[];
    let xotalProduct =[];
    let xategories =[];
    let personType = $('#personType').val();
    let countryRegionCode = $('#countryRegionCode').val();
    
        $.ajax({
            type : 'GET',
            url: '/Dashboard/GetTotalPersonByPersonType/?personType='+personType,
            success : function (result){
                    console.log(result);
        
                    for (let i=0; i < result.length; i++){
                            totalProduct.push(result[i].totalPerson);
                            categories.push(result[i].personType);
                    }
                    console.log(totalProduct);
                    console.log(categories);
                    
                    renderBarChart(totalProduct,categories);
                    //renderPieChart(totalProduct,categories);
                     $.ajax({
                         ");
                WriteLiteral(@"        type : 'GET',
                                 url: '/Dashboard/GetTotalPersonByCountry/?countryRegionCode='+countryRegionCode,
                                 success : function(result){
                                     console.log(result);
                                            for (let i=0; i < result.length; i++){
                                                xotalProduct.push(result[i].totalPerson);
                                                xategories.push(result[i].countryRegionCode);
                                            }
                                            console.log(xotalProduct);
                                            console.log(xategories);
                                         // renderBarChart(totalProduct,categories);
                                            renderPieChart(xotalProduct,xategories);
                                 }
                             })
                },
                error : function (result){
 ");
                WriteLiteral(@"                   console.log('failed to fetch data');
                }
             })
        })


       function renderBarChart(dataSeries, dataCategories) {
           var options = {
               series: [{
                   data: dataSeries
               }],
               chart: {
                   height: 350,
                   type: 'bar',
                   events: {
                   click: function(chart, w, e) {
                   // console.log(chart, w, e)
                   }
                   }
                   },
                   plotOptions: {
                        bar: {
                          columnWidth: '45%',
                          distributed: true,
                          }
                          },
                          dataLabels: {
                          enabled: false
                          },
                          legend:
                          {
                          show: false
                   ");
                WriteLiteral(@"       },
                      xaxis: {
                      categories: dataCategories,
                      }
                      };
                      var chart = new ApexCharts(document.querySelector(""#chart""), options);
                      chart.render();
        }
         function renderPieChart(dataSeries, dataCategories) {
           var options = {
               series: [{
                   data: dataSeries
               }],
               chart: {
                   height: 350,
                   type: 'bar',
                   events: {
                   click: function(chart, w, e) {
                   // console.log(chart, w, e)
                   }
                   }
                   },
                   plotOptions: {
                        bar: {
                          columnWidth: '45%',
                          distributed: true,
                          }
                          },
                          dataLabels: {
            ");
                WriteLiteral(@"              enabled: false
                          },
                          legend:
                          {
                          show: false
                          },
                      xaxis: {
                      categories: dataCategories,
                      }
                      };
                      var chart = new ApexCharts(document.querySelector(""#chart2""), options);
                      chart.render();
        }
        
        
 </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
